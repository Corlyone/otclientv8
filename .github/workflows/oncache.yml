name: Build on request (cached)
on: [workflow_dispatch]

jobs:
  Windows:
    name: Build windows version
    runs-on: windows-2019
    timeout-minutes: 120

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup MSBuild
      shell: pwsh
      run: |
        $vsPath = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" `
          -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
        $msbuildPath = Join-Path $vsPath 'MSBuild\Current\Bin'
        echo "MSBUILD_PATH=$msbuildPath" >> $env:GITHUB_ENV

    - name: Cache vcpkg binary and git data
      uses: actions/cache@v4
      with:
        path: |
          vcpkg/vcpkg.exe
          vcpkg/.git
        key: vcpkg-bin-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          vcpkg-bin-

    - name: Setup vcpkg (clone + bootstrap si no est√°)
      shell: pwsh
      run: |
        $env:VCPKG_ROOT = "${{ github.workspace }}\vcpkg"
        if (!(Test-Path $env:VCPKG_ROOT\vcpkg.exe)) {
          git clone https://github.com/microsoft/vcpkg.git $env:VCPKG_ROOT
          Set-Location $env:VCPKG_ROOT
          .\bootstrap-vcpkg.bat
        }

    - name: Cache vcpkg_installed (x86-windows-static)
      uses: actions/cache@v4
      with:
        path: vcpkg/vcpkg_installed
        key: vcpkg-x86-${{ hashFiles('vcpkg.json') }}
        restore-keys: |
          vcpkg-x86-

    - name: Install dependencies (x86)
      shell: pwsh
      run: |
        $env:VCPKG_ROOT = "${{ github.workspace }}\vcpkg"
        $env:VCPKG_DEFAULT_TRIPLET = "x86-windows-static"
        Set-Location $env:VCPKG_ROOT
        .\vcpkg.exe install

    - name: Integrate vcpkg
      run: |
        ${{ github.workspace }}\vcpkg\vcpkg.exe integrate install

    - name: Build DirectX Win32
      shell: pwsh
      run: |
        $env:Path = "$env:MSBUILD_PATH;$env:Path"
        cd vc17
        MSBuild otclient.sln /p:Configuration=DirectX /p:Platform=Win32 /p:BUILD_REVISION=${{ github.run_number }}

    - name: Build OpenGL Win32
      shell: pwsh
      run: |
        $env:Path = "$env:MSBUILD_PATH;$env:Path"
        cd vc17
        MSBuild otclient.sln /p:Configuration=OpenGL /p:Platform=Win32 /p:BUILD_REVISION=${{ github.run_number }}

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: OTClient-Binaries
        path: |
          otclient_dx.exe
          otclient_gl.exe
        if-no-files-found: error
